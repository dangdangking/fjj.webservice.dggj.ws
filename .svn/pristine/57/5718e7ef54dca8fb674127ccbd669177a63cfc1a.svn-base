<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:task="http://www.springframework.org/schema/task"
    xsi:schemaLocation="  
http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-4.1.xsd  
http://www.springframework.org/schema/tx
 http://www.springframework.org/schema/tx/spring-tx-4.1.xsd  
http://www.springframework.org/schema/aop 
http://www.springframework.org/schema/aop/spring-aop-4.1.xsd  
http://www.springframework.org/schema/context 
http://www.springframework.org/schema/context/spring-context-4.1.xsd
http://www.springframework.org/schema/task  
http://www.springframework.org/schema/task/spring-task-4.1.xsd ">

    <!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" scope="singleton">
        <property name="order" value="1" />
        <property name="ignoreUnresolvablePlaceholders" value="true" />
        <property name="locations">
            <list>
                <value>classpath:*.properties</value>
                <value>/WEB-INF/config/*.properties</value>
            </list>
        </property>
    </bean> -->
    <bean id="propertyConfigurer" class="com.spt.core.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:*.properties</value>
                <value>/WEB-INF/config/*.properties</value>
            </list>
        </property>
    </bean>
    <!-- 配置C3P0数据源 -->
    <!--<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="driverClass">
            <value>oracle.jdbc.driver.OracleDriver</value>
        </property>
        <property name="jdbcUrl">
            <value>${jdbc.url}</value>
        </property>
        <property name="user">
            <value>${jdbc.user}</value>
        </property>
        <property name="password">
            <value>${jdbc.passwd}</value>
        </property>
        <property name="initialPoolSize">
            <value>${pool.initialSize}</value>
        </property>
        <property name="maxPoolSize">
            <value>${pool.maxPoolSize}</value>
        </property>
        <property name="acquireIncrement">
            <value>${pool.acquireIncrement}</value>
        </property>
        <property name="idleConnectionTestPeriod">
            <value>${pool.idleConnectionTestPeriod}</value>
        </property>
        <property name="maxIdleTime">
            <value>${pool.maxIdleTime}</value>
        </property>
        <property name="autoCommitOnClose">
            <value>${pool.autoCommitOnClose}</value>
        </property>
        <property name="checkoutTimeout">
            <value>${pool.checkoutTimeout}</value>
        </property>
    </bean>-->
    
    
        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close"> 
      <!-- 基本属性 url、user、password -->
      <property name="url" value="${jdbc.url}" />
      <property name="username" value="${jdbc.user}" />
      <property name="password" value="${jdbc.passwd}" />
        
      <!-- 配置初始化大小、最小、最大 -->
      <property name="initialSize" value="1" />
      <property name="minIdle" value="1" /> 
      <property name="maxActive" value="20" />
   
      <!-- 配置获取连接等待超时的时间 -->
      <property name="maxWait" value="60000" />
   
      <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
      <property name="timeBetweenEvictionRunsMillis" value="60000" />
   
      <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
      <property name="minEvictableIdleTimeMillis" value="300000" />
    
      <property name="validationQuery" value="SELECT 'x' from dual" />
      <property name="testWhileIdle" value="true" />
      <property name="testOnBorrow" value="false" />
      <property name="testOnReturn" value="false" />
   
      <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
      <property name="poolPreparedStatements" value="true" />
      <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />
   
      <!-- 配置监控统计拦截的filters -->
      <property name="filters" value="mergeStat" /> 
  </bean>
  
  <!-- 
    <Resource
         name="jdbc/dggj"
         factory="com.alibaba.druid.pool.DruidDataSourceFactory"
         auth="Container"
         type="javax.sql.DataSource"
         driverClassName="oracle.jdbc.OracleDriver"
         url="jdbc:oracle:thin:@10.126.22.213:1521:dev11g"
         username="dggj"
         password="111"
         maxActive="50"
         maxWait="10000"
         removeabandoned="true"
         removeabandonedtimeout="60"
         logabandoned="false"
         filters="mergeStat"/>
    
    
    <bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean"> 
      <property name="jndiName"> 
           <value>java:comp/env/jdbc/dggj</value> 
      </property> 
    </bean>  -->
  
  
    <!-- DataSourceTransactionManager -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource">
            <ref bean="dataSource" />
        </property>
    </bean>
    <tx:annotation-driven />
    <bean id="commonService" class="com.spt.fjj.service.models.common.CommonService"
        scope="prototype" abstract="true">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    <!-- 扫包 -->
    <context:component-scan base-package="com.spt" />

    <context:annotation-config />
    <!-- 定时任务 -->
    <task:annotation-driven />
    <bean
        class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />
    

    <bean id="Tasks" class="com.spt.ws.client.ClientWYImpl"></bean>
    <bean id="CleanTasks" class="com.spt.ws.dao.impl.dataCleanImpl"></bean>
        
        <!-- 落格信息 -->
        <!-- <task:scheduled-tasks> <task:scheduled ref="Tasks" method="getXZSB" cron="0/2 * * * * ? " /> </task:scheduled-tasks>-->
        <!--<task:scheduled-tasks> <task:scheduled ref="Tasks" method="getSBFJ" cron="0/15 * * * * ? " /> </task:scheduled-tasks>
        <task:scheduled-tasks> <task:scheduled ref="Tasks" method="getQGFF" cron="0/15 * * * * ? " /> </task:scheduled-tasks> --> 
        
        
        
        
    <bean id="HelloWs" class="com.spt.ws.services.CommFjjServiceImpl"></bean>
</beans>